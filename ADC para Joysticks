#include "p16f887.inc"

; CONFIG1
; __config 0xE0D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF

 
GPR		UDATA
DELAY1		EQU	    0x021	;DELAY1 VARIABLE
DELAY2		EQU	    0X022	;DELAY2 VARIABLE
ADC_T_1		EQU	    0X023	;JOYSTICK X AXIS TEST VARIABLE
ADC_T_2		EQU	    0X024	;JOYSTICK Y AXIS TEST VARIABLE
JOYSTICK_X_1	EQU	    0X025	;JOYSTICK 1 X MOVEMENT VALUE
JOYSTICK_Y_1	EQU	    0X026	;JOYSTICK 1 Y MOVEMENT VALUE
 
RES_VECT    CODE    0x0000	 ;VECTOR RESET
 GOTO	SETUP 
 
SETUP:
    CALL PORT_CONFIG
    CALL OSCCON_CONFIG
    CALL ADC_CONFIG
 ;STEP 4 -> BEGIN CONVERSION BY SETTING THE ADCON0 GO/DONE BIT
 ;STEP 5 -> WAIT FOR THE ADC TO FINISH. CHECK GO/DONE BIT OR ADC INTERRUPT FLAG
 ;STEP 6 -> READ ADC RESULT FROM ADRESH FOR MSB AND ADRESL FOR LSB
 ;STEP 7 -> CLEAR ADC INTERRUPT FLAG
    MOVLW   h'80'
    MOVWF   JOYSTICK_X_1
 
    BSF		ADCON0, GO
LOOP:
    BCF		STATUS, RP0
    BTFSS	PIR1, ADIF
    GOTO	$-1
    CALL	ADC_CHECK_1
    BTFSS	PIR1, ADIF
    GOTO	$-1
    CALL	ADC_CHECK_2
    GOTO	LOOP

JOYSTICK_1_ACTION:
    BTFSS	ADC_T_1, 7	;CHECK IF ADC VALUE FROM X AXIS NEUTRAL POINT IS SET
    GOTO	VALUE_SUB	;IF VALUE IS LESS THAN 127 THEN THE JOYSTICK WILL SUBTRACT FROM THE NEUTRAL POSITION
    BTFSC	ADC_T_1, 6	;CHECK IF THE ADC BIT 6 FROM THE X AXIS IS CLEAR
    CALL	THREE_FOLD_SUM	;ADDS x3 TO THE MOVEMENT
    BTFSC	ADC_T_1, 5	
    CALL	TWO_FOLD_SUM	;ADDS x2 TO THE MOVEMENT
    BTFSC	ADC_T_1, 4
    CALL	ONE_FOLD_SUM	;ADDS x1 TO THE MOVEMENT
FINISH    NOP
    RETURN
    
VALUE_SUB:
    BTFSC	ADC_T_1, 6	;CHECK IF THE ADC BIT 6 FROM THE X AXIS IS CLEAR
    GOTO	ONE_FOLD_SUB	;SUBTRACT x1 TO THE MOVEMENT
    BTFSC	ADC_T_1, 5	
    GOTO	TWO_FOLD_SUB	;SUBTRACT x2 TO THE MOVEMENT
    BTFSC	ADC_T_1, 4
    GOTO	THREE_FOLD_SUB	;SUBTRACT x3 TO THE MOVEMENT
    GOTO	FINISH

;----------SUB_FUNCIONES_DE_JOYSTICK_1------------------------------------------
THREE_FOLD_SUM:		;ADDS +3 TO THE MOVEMENT
	INCF	JOYSTICK_X_1	
    BTFSC	STATUS, Z	;BIT CHECK OF THE STATUS ZERO TO VERIFY OVERFLOW
    DECF	JOYSTICK_X_1	;IF BIT IS SET, DECREASE THE FILE AS TO KEEP IT AT 255
	INCF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    DECF	JOYSTICK_X_1
	INCF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    DECF	JOYSTICK_X_1
    CALL	DELAY_500US
    RETURN

TWO_FOLD_SUM:		;ADDS +2 TO THE MOVEMENT
	INCF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    DECF	JOYSTICK_X_1
	INCF	JOYSTICK_X_1
    BTFSC	STATUS, Z	;BIT CHECK OF THE STATUS ZERO TO VERIFY OVERFLOW
    DECF	JOYSTICK_X_1	;IF BIT IS SET, DECREASE THE FILE AS TO KEEP IT AT 255
    CALL	DELAY_500US	;MOST BE DELETED OR ADJUSTED WHEN THE 
    RETURN

ONE_FOLD_SUM:		;ADDS +1 TO THE MOVEMENT
	INCF	JOYSTICK_X_1
    BTFSC	STATUS, Z	;BIT CHECK OF THE STATUS ZERO TO VERIFY OVERFLOW
    DECF	JOYSTICK_X_1	;IF BIT IS SET, DECREASE THE FILE AS TO KEEP IT AT 255
    CALL	DELAY_500US
    RETURN

ONE_FOLD_SUB:		;SUB -1 TO THE MOVEMENT
	DECF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_X_1
    CALL	DELAY_500US
    RETURN

TWO_FOLD_SUB:		;SUB -2 TO THE MOVEMENT
	DECF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_X_1
	DECF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_X_1
    CALL	DELAY_500US
    RETURN

THREE_FOLD_SUB:		;SUB -3 TO THE MOVEMENT
	DECF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_X_1
	DECF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_X_1
	DECF	JOYSTICK_X_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_X_1
    CALL	DELAY_500US
    RETURN
;----------SUB_FUNCIONES_DE_JOYSTICK_X_1 TERMINA----------------------------------
;-------------------------------------------------------------------------------
JOYSTICK_2_ACTION:
    BTFSS	ADC_T_2, 7	;CHECK IF ADC VALUE FROM X AXIS NEUTRAL POINT IS SET
    GOTO	VALUE_SUB_2	;IF VALUE IS LESS THAN 127 THEN THE JOYSTICK WILL SUBTRACT FROM THE NEUTRAL POSITION
    BTFSC	ADC_T_2, 6	;CHECK IF THE ADC BIT 6 FROM THE X AXIS IS CLEAR
    CALL	THREE_FOLD_SUM_2	;ADDS x3 TO THE MOVEMENT
    BTFSC	ADC_T_2, 5	
    CALL	TWO_FOLD_SUM_2	;ADDS x2 TO THE MOVEMENT
    BTFSC	ADC_T_2, 4
    CALL	ONE_FOLD_SUM_2	;ADDS x1 TO THE MOVEMENT
FINISH_2    NOP
    RETURN
    
VALUE_SUB_2:
    BTFSC	ADC_T_1, 6	;CHECK IF THE ADC BIT 6 FROM THE X AXIS IS CLEAR
    GOTO	ONE_FOLD_SUB_2	;SUBTRACT x1 TO THE MOVEMENT
    BTFSC	ADC_T_1, 5	
    GOTO	TWO_FOLD_SUB_2	;SUBTRACT x2 TO THE MOVEMENT
    BTFSC	ADC_T_1, 4
    GOTO	THREE_FOLD_SUB_2	;SUBTRACT x3 TO THE MOVEMENT
    GOTO	FINISH_2

;----------SUB_FUNCIONES_DE_JOYSTICK_Y_1------------------------------------------
THREE_FOLD_SUM_2:		;ADDS +3 TO THE MOVEMENT
	INCF	JOYSTICK_Y_1	
    BTFSC	STATUS, Z	;BIT CHECK OF THE STATUS ZERO TO VERIFY OVERFLOW
    DECF	JOYSTICK_Y_1	;IF BIT IS SET, DECREASE THE FILE AS TO KEEP IT AT 255
	INCF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    DECF	JOYSTICK_Y_1
	INCF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    DECF	JOYSTICK_Y_1
    CALL	DELAY_500US
    RETURN

TWO_FOLD_SUM_2:		;ADDS +2 TO THE MOVEMENT
	INCF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    DECF	JOYSTICK_Y_1
	INCF	JOYSTICK_Y_1
    BTFSC	STATUS, Z	;BIT CHECK OF THE STATUS ZERO TO VERIFY OVERFLOW
    DECF	JOYSTICK_Y_1	;IF BIT IS SET, DECREASE THE FILE AS TO KEEP IT AT 255
    CALL	DELAY_500US	;MOST BE DELETED OR ADJUSTED WHEN THE 
    RETURN

ONE_FOLD_SUM_2:		;ADDS +1 TO THE MOVEMENT
	INCF	JOYSTICK_Y_1
    BTFSC	STATUS, Z	;BIT CHECK OF THE STATUS ZERO TO VERIFY OVERFLOW
    DECF	JOYSTICK_Y_1	;IF BIT IS SET, DECREASE THE FILE AS TO KEEP IT AT 255
    CALL	DELAY_500US
    RETURN

ONE_FOLD_SUB_2:		;SUB -1 TO THE MOVEMENT
	DECF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_Y_1
    CALL	DELAY_500US
    RETURN

TWO_FOLD_SUB_2:		;SUB -2 TO THE MOVEMENT
	DECF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_Y_1
	DECF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_Y_1
    CALL	DELAY_500US
    RETURN

THREE_FOLD_SUB_2:		;SUB -3 TO THE MOVEMENT
	DECF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_Y_1
	DECF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_Y_1
	DECF	JOYSTICK_Y_1
    BTFSC	STATUS, Z
    INCF	JOYSTICK_Y_1
    CALL	DELAY_500US
    RETURN
;----------SUB_FUNCIONES_DE_JOYSTICK_Y_1 TERMINA----------------------------------
;-------------------------------------------------------------------------------
ADC_CHECK_1:
    MOVF	ADRESH, W
    MOVWF	ADC_T_1
    CALL	PORT_DISPLAY
    BCF		PIR1, ADIF
    BSF		ADCON0, CHS0	;CHANGE CHANNEL TO AN1
    CALL	DELAY_500US
    BSF		ADCON0, GO
    RETURN
    
ADC_CHECK_2:
    MOVF	ADRESH, W
    MOVWF	ADC_T_2
    BTFSC	PORTA, RA4
    CALL	PORT_DISPLAY
    BCF		PIR1, ADIF
    BCF		ADCON0, CHS0	;CHANGE CHANNEL TO AN1
    CALL	DELAY_500US
    BSF		ADCON0, GO
    RETURN    

PORT_DISPLAY:
    CALL	JOYSTICK_1_ACTION
    CLRW	
    MOVF	JOYSTICK_X_1, W
    MOVWF	PORTB
    RETURN
    
OSCCON_CONFIG:
    BANKSEL	OSCCON
    BSF		OSCCON, SCS	;SET INTERNAL OSCILLATOR FOR SYSTEM CLOCK
    BSF		OSCCON, HTS
    BSF		OSCCON, IRCF0	;SET OSCILATION TO 500 kHz
    BSF		OSCCON, IRCF1
    BCF		OSCCON, IRCF2
    RETURN 
 
PORT_CONFIG:
    BCF		STATUS, RP0
    BCF		STATUS, RP1
    CLRF	PORTA		;CLEAR PORTS OF THE THEIR CONTENT
    CLRF	PORTB
    CLRF	PORTC
    CLRF	PORTD
    BSF		STATUS, RP0
    CLRF	TRISA		;SETS PORTS TO OUTPUT
    CLRF	TRISB
    CLRF	TRISC
    CLRF	TRISD
    RETURN     
    
ADC_CONFIG:			;FOF A 500kHz OSCILATION
    BSF		STATUS, RP0
    BCF		STATUS, RP1	;ACCESS BNK 1
 ;STEP 1 -> DISABLE PIN OUPUT DRIVER VIA TRIS AND CONFIG ANALOG PINS
    CLRF	TRISA
    BSF		TRISA, RA0	;MAKE PORTA PINS 0 INPIUT
    BSF		TRISA, RA1	
    BSF		TRISA, RA4	;SWITCH BUTTON
    BSF		STATUS, RP0
    BSF		STATUS, RP1	;ACCESS BANC 4
    CLRF	ANSEL
    CLRF	ANSELH		;DISABLE HIGH ANALOG REGISTER TO FIGITAL
    BSF		ANSEL, ANS0	;ENABLE PIN RA0 AS ANALOG
    BSF		ANSEL, ANS1
 ;STEP 2 -> CONFIG ADC MODULE	*CHANNEL SELECTION CONFIG
    BCF		STATUS, RP0	
    BCF		STATUS, RP1	;ACCESS BANK 0
    CLRF	ADCON0		;SETS ANALOG CHANNEL TO AN0
    BSF		ADCON0, ADCS0	;SET ADC CLOCK TO Fosc/8
    BSF		STATUS, RP0	;ACCESS BANK 1
    CLRF	ADCON1		;SETS VOLTAGE REF. TO VDD AND VSS & LEFT JUSTIFIED
    BCF		STATUS, RP0	;RETURN TO BANK 0
    BSF		ADCON0, ADON	;ENABLES ADC
    CALL	DELAY_500US
 ;STEP 3 -> WAIT AQUISITION TIME
 ;STEP 4 -> BEGIN CONVERSION BY SETTING THE ADCON0 GO/DONE BIT
 ;STEP 5 -> WAIT FOR THE ADC TO FINISH. CHECK GO/DONE BIT OR ADC INTERRUPT FLAG
 ;STEP 6 -> READ ADC RESULT FROM ADRESH FOR MSB AND ADRESL FOR LSB
 ;STEP 7 -> CLEAR ADC INTERRUPT FLAG
    RETURN      
;-------------------------------DELAYS---------------------
DELAY_50MS
    MOVLW   .100	    ; 1US 
    MOVWF   DELAY2
    CALL    DELAY_500US
    DECFSZ  DELAY2	    ; DECREMENTA CONT1
    GOTO    $-2		    ; IR A LA POSICION DEL PC - 1
    RETURN
    
DELAY_500US
    MOVLW   .250		    ; 1US 
    MOVWF   DELAY1	    
    DECFSZ  DELAY1		    ; DECREMENTA CONT1
    GOTO    $-1			    ; IR A LA POSICION DEL PC - 1
    RETURN       

 END
