;------------------------------------------------------------------------------
;UNIVSERSIDAD DEL VALLE DE GUATEMALA
;INTEGRANTES
;Bryan Sanders		    17294
;Matias			    carnet
;
;FECHA: 10/11/2018
;Prgramacion para el control de cuatro distintos servos para el control de un 
;brazo de ________ como proyecto final del curso de Microcontroladores.
;Se implementa un ADC para el manejo analogo de datos para tener un control mas
;preciso del brazo al igual que comunicacion serial para comunicarse con una
;commputadora que estara reciviendo y mandando datos hacia el PIC16877 el cual
;mandara los datos necesarios para mover los distintos servos.

#include "p16f887.inc"

; CONFIG1
; __config 0xE0D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF

;----------------------------GENERAL_VARIABLES----------------------------------
 
GPR_VAR	    UDATA

RES_VECT CODE 0x0000	    ;VECTOR RESET
 GOTO	SETUP 
 
;---------------------------------SUBRUTINES------------------------------------
PORT_CONFIG:
    BCF		STATUS, RP0
    BCF		STATUS, RP1
    CLRF	PORTA
    CLRF	PORTB
    CLRF	PORTC
    CLRF	PORTD
    BSF		STATUS, RP1
    CLRF	TRISA		;SETS PORTS TO OUTPUT
    CLRF	TRISB
    CLRF	TRISC
    CLRF	TRISD
    RETURN
    
;------------------------------OSCCON_CONFIG------------------------------------
OSCCON_CONFIG:
    BANKSEL	OSCCON
    BSF		OSCCON, SCS	;SET INTERNAL OSCILLATOR FOR SYSTEM CLOCK
    BSF		OSCCON, HTS
    BSF		OSCCON, IRCF0	;SET OSCILATION TO 500 kHz
    BSF		OSCCON, IRCF1
    BCF		OSCCON, IRCF2
    RETURN

;---------------------------------PWM_CONFIG-------------------------------------

PWM_CONFIG:
    BSF	    STATUS, RP0
    BCF	    STATUS, RP1	    ;ACCESS BANK 1
 ;STEP 1 -> DISABLING CCPx
    MOVLW   h'FF'
    MOVWF   TRISC	    ;SET CCPx AS INPUT
 ;STEP 2 -> SET PWM PERIOD THROUGH PR2 REG
    MOVLW   h'9B'	    ;HEX VALUE IS 155
    MOVWF   PR2
 ;STEP 3 -> SET PWM MODE THROUGH CCP1CON
    BCF	    STATUS, RP0	    ;CHANING TO BANK 0
    BCF	    CCP1CON, CCP0M
    BCF	    CCP1CON, CCP1M
    BSF	    CCP1CON, CCP2M
    BSF	    CCP1CON, CCP3M  ;SET 
 ;STEP 4 -> SET PWM DUTY CYCLE THROUGH CCPR1L AND CCP1CON DC1B<1:0>
    CLRF    CCPR1L
    MOVLW   h'F'	    ;HEX VALUE TO BINARY 1111 WHICH IS MSB OF 62
    MOVWF   CCPR1L
    BSF	    CCP1CON, DC1B0
    BSF	    CCP1CON, DC1B1  ;THIS SETS THE D.C. TO 0.100961
 ;STEP 5 -> CONFIGURATE AND START TMR2
    CALL    TMR2_CONFIG
 ;STEP 6 -> WAIT FOR TMR2IF AND THEN SET PWM OUPUT PIN
    BTFSS   PIR1, TMR2IF
    GOTO    $-1
    BCF	    PIR1, TM2RIF    ;CLEARS THE TMR2 INTERRUPT FLAG
    BSF	    STATUS, RP0	    ;CHANGE TO BANK 1
    BCF	    TRISC, RC2	    ;SET PORT C PIN RC2 AS OUTPUT
    RETURN
    
TMR2_CONFIG:
    BCF	    PIR1, TMR2IF    ;CLEARS TMR2 INTERRUPT FLAG
    CLRF    T2CON
    BSF	    T2CON, T2CKPS0
    BSF	    T2CON, T2CKPS1  ;SET TMR2 PRE-SCALER TO 16
    BSF	    T2CON, TMR2ON   ;ENABLE TMR2
    RETURN    
    
;-----------------------------ADCON0_CONFIG------------------------------------
ADC_CONFIG:			;FOF A 500kHz OSCILATION
    BSF		STATUS, RP0
    BCF		STATUS, RP1	;ACCESS BNK 1
 ;STEP 1 -> DISABLE PIN OUPUT DRIVER VIA TRIS AND CONFIG ANALOG PINS
    CLRF	TRISA
    BSF		TRISA, RA0	;MAKE PORTA PINS 0 INPIUT  
    BSF		STATUS, RP0
    BSF		STATUS, RP1	;ACCESS BANC 4
    CLRF	ANSEL
    CLRF	ANSELH		;DISABLE HIGH ANALOG REGISTER TO FIGITAL
    BSF		ANSEL, ANS0	;ENABLE PIN RA0 AS ANALOG
 ;STEP 2 -> CONFIG ADC MODULE
    BCF		STATUS, RP0	;CHANNEL SELECTION CONFIG
    BCF		STATUS, RP1	;ACCESS BANK 0
    CLRF	ADCON0		;SETS ANALOG CHANNEL TO AN0
    BSF		ADCON0, ADCS0	;SET ADC CLOCK TO Fosc/8
    BSF		STATUS, RP0	;ACCESS BANK 1
    CLRF	ADCON1		;SETS VOLTAGE REF. TO VDD AND VSS & LEFT JUSTIFIED
    BCF		STATUS, RP0	;RETURN TO BANK 0
    BSF		ADCON0, ADON	;ENABLES ADC
 ;STEP 3 -> WAIT AQUISITION TIME
 ;STEP 4 -> BEGIN CONVERSION BY SETTING THE ADCON0 GO/DONE BIT
 ;STEP 5 -> WAIT FOR THE ADC TO FINISH. CHECK GO/DONE BIT OR ADC INTERRUPT FLAG
 ;STEP 6 -> READ ADC RESULT FROM ADRESH FOR MSB AND ADRESL FOR LSB
 ;STEP 7 -> CLEAR ADC INTERRUPT FLAG
    RETURN    
    
;----------------------------UART_CONFIGURATION--------------------------------
UART_CONFIG:
;-------------------------UART_TXEN_Setup--------------------------
;SET THE SPRGE TO 12 DECIMAL FOR A BR OF 2400 AT 500 kHz
;AND AN 8-BIT ASYINCRONOUS SETUP
;STEP 1
    BSF		STATUS, RP0
    BCF		STATUS, RP1	;ACCESS BANK 1
    MOVLW	.12
    MOVWF	SPBRG
    BSF		STATUS, RP1	;ACCESS BANK 4
    BCF		BAUDCTL, BRG16	;DISABLE 2 BYTE TX

;STEP 2
    BCF		STATUS, RP1	;RETURN TO BANK 1
    BSF		TXSTA, BRGH
    BCF		TXSTA, SYNC
    BCF		STATUS, RP0	;ACCESS BANK 0
    BSF		RCSTA, SPEN
    BCF		RCSTA, RX9
 ;STEP 3 -> ENABLE THE TRANSMISSION SETTING THROUGH THE TXEN BIT IN TXSTA
    BSF		STATUS, RP0	;ACCESS BANK 1
    BCF		TXSTA, TX9
    BSF		TXSTA, TXEN	;ENABLE TX TRANSMISSION
    BCF		STATUS, RP0	;ACCESS BANK 0
    BCF		PIR1, TXIF	;CLEAR TX INTERRUPT FLAG

;-------------------------------UART_RXEN_Setup---------------------
;STEP 1
    BSF		RCSTA, CREN
    BSF		RCSTA, SPEN
 ;STEP 2 -> READ THE RCSTA FOR ERROR FLAGS
    BTFSC	RCSTA, OERR
    BCF		RCSTA, OEER
 ;STEP 3 -> READ RCREG REG TO ACCESS THE 8 LSBs OF THE RECEIVING BUFFER
    RETURN

 END
